/*
* "off" 或 0 - 关闭规则
* "warn" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)
* "error" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)
* */
{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true
  },
  "extends": "eslint:recommended",
  "globals": {
    "$": true,
    "process": true,
    "__dirname": true
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": "truespaced-comment",
      "modules": true
    },
    "sourceType": "module",
    "ecmaVersion": 7
  },
  "plugins": [
    "react"
  ],
  "rules": {
    /* React JSX */
    "jsx-quotes": ["error", "prefer-double"], // 强制在JSX属性（jsx-quotes）中一致使用双引号
    "react/display-name": "off", // 防止在React组件定义中丢失displayName
    "react/forbid-prop-types": "off", //禁止某些propTypes
    "react/jsx-boolean-value": "error", // 在JSX中强制布尔属性符号
    "react/jsx-closing-bracket-location": "warn", // 在JSX中验证右括号位置
    "react/jsx-curly-spacing": ["off", {"when": "never", "children": true}], // 在JSX属性和表达式中加强或禁止大括号内的空格。
    "react/jsx-equals-spacing": "error", // 在JSX属性中强制或禁止等号周围的空格
    "react/jsx-indent-props": "off", // 验证JSX中的props缩进
    "react/jsx-key": "error", // 在数组或迭代器中验证JSX具有key属性
    "react/jsx-max-props-per-line": ["warn", {"maximum": 2}], // 限制JSX中单行上的props的最大数量
    "react/jsx-no-bind": "off", // JSX中不允许使用箭头函数和bind
    "react/jsx-no-duplicate-props": "error", // 防止在JSX中重复的props
    "react/jsx-no-literals": "off", // 防止使用未包装的JSX字符串
    "react/jsx-no-undef": "warn", // 在JSX中禁止未声明的变量
    "react/jsx-pascal-case": "error", // 为用户定义的JSX组件强制使用PascalCase
    "react/jsx-sort-props": "off", // 强化props按字母排序
    "react/jsx-uses-react": "warn", // 防止反应被错误地标记为未使用
    "react/jsx-uses-vars": "error", // 防止在JSX中使用的变量被错误地标记为未使用
    "react/no-array-index-key": "off", // 防止在数组中遍历中使用数组key做索引
    "react/no-danger": "off", // 防止使用危险的JSX属性
    "react/no-deprecated": "off", // 不使用弃用的方法
    "react/no-did-mount-set-state": "off", // 防止在componentDidMount中使用setState
    "react/no-did-update-set-state": "warn", // 防止在componentDidUpdate中使用setState
    "react/no-direct-mutation-state": "error", // 防止this.state的直接变异
    "react/no-multi-comp": "off", // 防止每个文件有多个组件定义
    "react/no-set-state": "off", // 防止使用setState
    "react/no-unknown-property": "error", // 防止使用未知的DOM属性
    "react/prefer-es6-class": "error", // 为React组件强制执行ES5或ES6类
    "react/prop-types": "off", // 防止在React组件定义中丢失props验证
    "react/react-in-jsx-scope": "error", // 使用JSX时防止丢失React
    "react/self-closing-comp": "off", // 防止没有children的组件的额外结束标签
    "react/sort-comp": "error", // 强制组件方法顺序


    /* Possible Errors  这些规则与 JavaScript 代码中可能的错误或逻辑错误有关 */
    "getter-return": "error", // 强制 getter 函数中出现 return 语句
    "no-await-in-loop": "error", // 禁止在循环中出现 await
    "no-cond-assign": "error", // 禁止在条件表达式中使用赋值语句
    "no-console": "off", // 禁用 console
    "no-debugger": "error", // 禁用debugger
    "no-dupe-args": "error", // 函数参数不能重复
    "no-dupe-keys": "error", // 在创建对象字面量时不允许键重复
    "no-duplicate-case": "error", // switch中的case标签不能重复
    "no-empty": "error", // 块语句中的内容不能为空
    "no-extra-boolean-cast": "off", // 禁止不必要的bool转换
    "no-extra-parens": "off", // 禁止不必要的括号
    "no-extra-semi": "warn",// 禁止多余的冒号
    "no-func-assign": "error", // 禁止重复的函数声明
    "no-irregular-whitespace": "error", // 不规则的空白不允许
    "no-prototype-builtins": "off", // 禁止直接调用 Object.prototypes 的内置属性
    "no-unreachable": "warn", // 不能有无法执行的代码


    /* Best Practices 这些规则是关于最佳实践的，帮助你避免一些问题 */
    "block-scoped-var": "error", // 强制把变量的使用限制在其定义的作用域范围内
    "no-alert": "error", // 禁止使用alert confirm prompt
    "no-invalid-this": "off", // 禁止无效的this，只能用在构造器，类，对象字面量
    "no-lone-blocks": "off", // 禁止不必要的嵌套块
    "no-multi-spaces": "error", // 禁止使用多个空格
    "no-redeclare": "error", // 禁止重复声明变量


    /* Variables 这些规则与变量声明有关 */
    "no-delete-var": "error", // 不能对var声明的变量使用delete操作符
    "no-undef": "error", // 不能有未定义的变量
    "no-unused-vars": "off", // 不能有声明后未被使用的变量或参数
    "no-use-before-define": "off", // 未定义前不能使用


    /* Stylistic Issues 这些规则是关于风格指南的，而且是非常主观的 */
    "array-bracket-spacing": ["warn", "always"], // 强制数组方括号中使用一致的空格
    "block-spacing": "error", // 禁止或强制在代码块中开括号前和闭括号后有空格
    "brace-style": "error", // 强制在代码块中使用一致的大括号风格
    "camelcase": "off", // 强制驼峰法命名
    "comma-dangle": "off", // 对象字面量项尾不能有逗号
    "comma-spacing": "error", // 强制在逗号前后使用一致的空格
    "comma-style": "error", // 强制使用一致的逗号风格
    "indent": ["off", 2], // 强制使用一致的缩进
    "key-spacing": ["error", { "afterColon": true }], // 强制使用一致的缩进
    "keyword-spacing": ["error", { "before": true }], // 强制关键字周围空格的一致性
    "no-lonely-if": "error", // 命令行上的选项可以自动修复一些被这条规则反映的问题
    "no-mixed-spaces-and-tabs": "warn", // 禁止混用tab和空格
    "no-trailing-spaces": "off", // 一行结束后面有空格就发出警告
    "no-underscore-dangle": "off", // 标识符不能以_开头或结尾
    "object-curly-spacing": ["warn", "always"], // 强制在大括号中使用一致的空格
    "quotes": ["error", "single"], // 单引号
    "semi": "warn", // 不强制使用分号
    "semi-style": "warn", // 强制分号的位置
    "spaced-comment": "warn", // 评论之后立即要求或不允许空白


    /* ECMAScript 6 这些规则只与 ES6 有关, 即通常所说的 ES2015 */
    "arrow-parens": "off", // 箭头函数用小括号括起来
    "arrow-spacing": "error", // =>的前/后括号
    "no-class-assign": "error", // 禁止给类赋值
    "no-const-assign": "error", // 禁止修改const声明的变量
    "no-this-before-super": "off", // 在调用super()之前不能使用this或super
    "no-var": "warn", // 对var警告
    "prefer-arrow-callback": "off", // 比较喜欢箭头回调


    /* Deprecated */
    "no-spaced-func": "error" // 函数调用时 函数名与()之间不能有空格
  },
  "settings": {
    "import/ignore": [
      "node_modules"
    ],
    "react": {
      "version": "detect"
    }
  }
}